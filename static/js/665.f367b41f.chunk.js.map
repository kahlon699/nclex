{"version":3,"file":"static/js/665.f367b41f.chunk.js","mappings":"2LAIA,MAkDA,EAlDkBA,KAChB,MAAM,gBAAEC,IAAoBC,EAAAA,EAAAA,MACrBC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,OAC5CC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,MAkCzC,OAhCAG,EAAAA,EAAAA,YAAU,KACYC,WAClB,IAEE,IAAKR,EAEH,YADAS,QAAQC,MAAM,8BAKhB,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,IAAKF,EAEH,YADAF,QAAQC,MAAM,oCAKhB,MAAMI,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OAlBtBC,mCAkBiC,oBAAoB,CAC7DC,QAAS,CAAEC,cAAc,UAADH,OAAYN,MAItCR,EAAiBW,EAASO,KAAKnB,eAC/BI,EAAYQ,EAASO,KAAKC,SAC5B,CAAE,MAAOC,GACPd,QAAQC,MAAM,0BAA2Ba,EAC3C,GAGFC,EAAa,GACZ,CAACxB,KAGFyB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASrB,EAAS,QACH,OAAlBH,GACCuB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,yBAAuBxB,EAAc,YAExCyB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAED,C","sources":["components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../services/AuthContext'; // Import the useAuth hook\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const { isAuthenticated } = useAuth(); // Get the isAuthenticated state\r\n  const [currentStreak, setCurrentStreak] = useState(null); // Track login streak\r\n  const [userName, setUserName] = useState(null);\r\n  const API_URL = process.env.REACT_APP_API_URL;\r\n  useEffect(() => {\r\n    const fetchStreak = async () => {\r\n      try {\r\n        // Check if the user is authenticated\r\n        if (!isAuthenticated) {\r\n          console.error('User is not authenticated.');\r\n          return;\r\n        }\r\n\r\n        // Retrieve the token from localStorage\r\n        const token = localStorage.getItem('token');     \r\n        if (!token) {\r\n          console.error('Token not found in localStorage.');\r\n          return;\r\n        }\r\n\r\n        // Make the API request with the token in the headers\r\n        const response = await axios.get(`${API_URL}/api/user/streak`, {\r\n          headers: { Authorization: `Bearer ${token}` }, // Include the token in the request\r\n        });\r\n\r\n        // Set the current streak from the response\r\n        setCurrentStreak(response.data.currentStreak);\r\n        setUserName(response.data.username);\r\n      } catch (err) {\r\n        console.error('Failed to fetch streak:', err);\r\n      }\r\n    };\r\n\r\n    fetchStreak();\r\n  }, [isAuthenticated]); // Re-run effect when isAuthenticated changes\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <h2>Welcome {userName} !</h2>\r\n      {currentStreak !== null ? (\r\n        <p>Current Login Streak: {currentStreak} days</p>\r\n      ) : (\r\n        <p>Loading streak...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"names":["Dashboard","isAuthenticated","useAuth","currentStreak","setCurrentStreak","useState","userName","setUserName","useEffect","async","console","error","token","localStorage","getItem","response","axios","get","concat","process","headers","Authorization","data","username","err","fetchStreak","_jsxs","children","_jsx"],"sourceRoot":""}